(= (AttentionalFocusMax) 10)
(= (EventsMax) 10)
!(bind! &currentTime (new-state 1))
!(bind! &evidentialBase (new-state 1))
;;Reasoner state and memory
!(bind! &execution (new-state None))
(= (increment $atom) (change-state! $atom (+ 1 (get-state $atom))))
(= (UpdateReasonerState) ((increment &currentTime) (increment &evidentialBase)))
(= (GetReasonerState) ((get-state &currentTime) (Cons (get-state &evidentialBase) Nil)))
!(bind! &belief_events (new-space))
!(bind! &goal_events (new-space))
!(bind! &attentional_focus (new-space))
!(bind! &concepts (new-space))

(= (EventPriorityNow ($T $P) $t) (* $P (/ 1 (+ 1 (- $t $T)))))
(= (ConceptPriorityNow ($T $P) $t) (* $P (/ 1 (+ 1 (- $t $T)))))
(= (StampOverlap Nil) False)
(= (StampOverlap (Cons $LH $LT)) (or (Included $LH $LT) (StampOverlap $LT)))
                                    
(= (RevisionAndChoice (Event ($Term1 ($f1 $c1)) (eternal $ev1 $EPrio1)) (Event ($Term2 ($f2 $c2)) (eternal $ev2 $EPrio2)))
   (let $ConclusionStamp (ListConcat $ev1 $ev2) 
    (if (StampOverlap $ConclusionStamp) 
        (if (> $c1 $c2)
            (Event ($Term1 ($f1 $c1)) (eternal $ev1 0.0))
            (Event ($Term2 ($f2 $c2)) (eternal $ev2 0.0)))
        (Event ($Term1 (Truth_Revision ($f1 $c1) ($f2 $c2))) (eternal $ConclusionStamp 0.0)))))

;;revise existing one or create new concept
(= (UpdateConcept $NewEvent $t)
    (let* (((Event ($Term $TV) ($Time $Evidence $EPrio)) $NewEvent)
           ($NewEventEternalized (Eternalize $NewEvent))
           ($MatchConcept (Concept $Term $Belief $BeliefEvent $CPrio)))
    (sequential ((case (match &attentional_focus $MatchConcept $MatchConcept)
                       (($MatchConcept (sequential ((remove-atom &attentional_focus $MatchConcept)
                                                    (let* (($RevisedBelief (RevisionAndChoice $Belief $NewEventEternalized))
                                                           ($MaxPrio (if (> (EventPriorityNow $EPrio $t) (ConceptPriorityNow $CPrio $t))
                                                                            $EPrio $CPrio)))
                                                          (add-atom &attentional_focus (Concept $Term $RevisedBelief $NewEvent $MaxPrio))))))
                   (%void% (case (match &concepts $MatchConcept $MatchConcept)
                                 (($MatchConcept (sequential ((remove-atom &concepts $MatchConcept)
                                                              (add-atom &attentional_focus $MatchConcept)
                                                              (UpdateConcept $NewEvent $t))))
                                  (%void% (add-atom &attentional_focus (Concept $Term $NewEventEternalized $NewEvent $EPrio))))))))))))

(= (ProcessEvent $Ev $t)
   (sequential ((add-atom &belief_events $Ev)
                (UpdateConcept $Ev $t))))

(= (BoundEvents $collection $Threshold $Increment $TargetAmount $t)
   (sequential ((let* (($Ev (get-atoms $collection))
                       ((Event $Sentence ($Time $Evidence $EPrio)) $Ev))
                      (if (< (EventPriorityNow $EPrio $t) $Threshold) (remove-atom $collection $Ev) nop))
                (let $CurrentAmount (CollapseCardinality (get-atoms $collection))
                     (if (and (> $CurrentAmount $TargetAmount) (< $Threshold 1.0))
                         (BoundEvents $collection (+ $Threshold $Increment) $Increment $TargetAmount $t) nop)))))

(= (BoundConcepts $Threshold $Increment $TargetAmount $t)
   (sequential ((let* (($C (get-atoms &attentional_focus))
                       ((Concept $Term (Event $Sentence $Metadata) $BeliefEvent $CPrio) $C))
                      (if (< (ConceptPriorityNow $CPrio $t) $Threshold) (sequential ((remove-atom &attentional_focus $C)
                                                                                     (add-atom &concepts $C))) nop))
                (let $CurrentAmount (CollapseCardinality (get-atoms &attentional_focus))
                     (if (and (> $CurrentAmount $TargetAmount) (< $Threshold 1.0))
                         (BoundConcepts (+ $Threshold $Increment) $Increment $TargetAmount $t) nop)))))

(: EternalQuestion (-> Expression $t))
(= (EternalQuestion $Term) (case (match (superpose (&attentional_focus &concepts)) (Concept $Term $Belief $BeliefEvent $CPrio) $Belief)
                                (($Ev $Ev) (%void% (Event (None (0.5 0.0)) (eternal Nil 0.0))))))
(: EventQuestion (-> Expression $t))
(= (EventQuestion $Term) (case (match (superpose (&attentional_focus &concepts)) (Concept $Term $Belief $BeliefEvent $CPrio) $BeliefEvent)
                                (($Ev $Ev) (%void% (Event (None (0.5 0.0)) (0 Nil 0.0))))))

